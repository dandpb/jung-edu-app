{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Educational Workflow Definition Schema",
  "description": "JSON schema for defining educational workflows in jaqEdu platform",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^[a-z0-9-]+$",
      "minLength": 3,
      "maxLength": 50,
      "description": "Unique workflow identifier using kebab-case"
    },
    "name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 100,
      "description": "Human-readable workflow name"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Semantic version of the workflow definition"
    },
    "description": {
      "type": "string",
      "maxLength": 500,
      "description": "Detailed workflow description"
    },
    "category": {
      "type": "string",
      "enum": [
        "learning",
        "assessment",
        "content-generation",
        "user-management",
        "analytics",
        "integration",
        "maintenance",
        "security"
      ],
      "description": "Workflow category for organization"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-z0-9-]+$"
      },
      "uniqueItems": true,
      "maxItems": 10,
      "description": "Tags for workflow discovery and filtering"
    },
    "metadata": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string",
          "description": "Workflow author information"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Workflow creation timestamp"
        },
        "modified": {
          "type": "string",
          "format": "date-time",
          "description": "Last modification timestamp"
        },
        "estimatedDuration": {
          "type": "integer",
          "minimum": 1,
          "description": "Estimated execution time in seconds"
        },
        "complexity": {
          "type": "string",
          "enum": ["low", "medium", "high"],
          "description": "Workflow complexity level"
        }
      },
      "additionalProperties": true
    },
    "triggers": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "manual",
              "schedule",
              "webhook",
              "file-upload",
              "user-action",
              "system-event",
              "api-call",
              "database-change"
            ]
          },
          "config": {
            "type": "object",
            "description": "Trigger-specific configuration"
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": { "type": "string" },
                "operator": {
                  "type": "string",
                  "enum": ["equals", "not_equals", "greater_than", "less_than", "contains", "exists"]
                },
                "value": { "type": ["string", "number", "boolean"] }
              },
              "required": ["field", "operator"]
            }
          }
        },
        "required": ["type"]
      },
      "description": "Workflow trigger definitions"
    },
    "variables": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_][a-zA-Z0-9_]*$": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["string", "number", "boolean", "array", "object"]
            },
            "default": {
              "description": "Default variable value"
            },
            "required": {
              "type": "boolean",
              "default": false
            },
            "description": {
              "type": "string",
              "description": "Variable description"
            },
            "validation": {
              "type": "object",
              "description": "Variable validation rules"
            }
          },
          "required": ["type"]
        }
      },
      "description": "Workflow variable definitions"
    },
    "steps": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-z0-9-]+$",
            "description": "Unique step identifier"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Step name"
          },
          "type": {
            "type": "string",
            "enum": [
              "action",
              "condition",
              "loop",
              "parallel",
              "subprocess",
              "delay",
              "human-task",
              "ai-task",
              "api-call",
              "database-operation"
            ]
          },
          "description": {
            "type": "string",
            "description": "Step description"
          },
          "config": {
            "type": "object",
            "description": "Step-specific configuration"
          },
          "inputs": {
            "type": "object",
            "description": "Step input parameters"
          },
          "outputs": {
            "type": "object",
            "description": "Step output definitions"
          },
          "retry": {
            "type": "object",
            "properties": {
              "attempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10,
                "default": 3
              },
              "delay": {
                "type": "integer",
                "minimum": 100,
                "description": "Retry delay in milliseconds"
              },
              "backoff": {
                "type": "string",
                "enum": ["linear", "exponential"],
                "default": "exponential"
              }
            }
          },
          "timeout": {
            "type": "integer",
            "minimum": 1000,
            "description": "Step timeout in milliseconds"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Step dependencies (other step IDs)"
          },
          "condition": {
            "type": "string",
            "description": "Condition for step execution"
          },
          "onError": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "enum": ["continue", "retry", "fail", "skip"]
              },
              "steps": {
                "type": "array",
                "items": { "$ref": "#/properties/steps/items" }
              }
            }
          }
        },
        "required": ["id", "name", "type"]
      },
      "description": "Workflow step definitions"
    },
    "outputs": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_][a-zA-Z0-9_]*$": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["string", "number", "boolean", "array", "object"]
            },
            "description": {
              "type": "string"
            },
            "source": {
              "type": "string",
              "description": "Source step and field"
            }
          },
          "required": ["type", "source"]
        }
      },
      "description": "Workflow output definitions"
    },
    "permissions": {
      "type": "object",
      "properties": {
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required permissions to execute workflow"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["admin", "educator", "student", "moderator", "viewer"]
          },
          "description": "Roles allowed to execute workflow"
        }
      }
    },
    "settings": {
      "type": "object",
      "properties": {
        "concurrent": {
          "type": "boolean",
          "default": false,
          "description": "Allow concurrent execution"
        },
        "maxConcurrent": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "Maximum concurrent executions"
        },
        "priority": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "default": 5,
          "description": "Execution priority"
        },
        "notifications": {
          "type": "object",
          "properties": {
            "onStart": { "type": "boolean", "default": false },
            "onComplete": { "type": "boolean", "default": true },
            "onError": { "type": "boolean", "default": true }
          }
        }
      }
    }
  },
  "required": [
    "id",
    "name",
    "version",
    "description",
    "category",
    "triggers",
    "steps"
  ],
  "additionalProperties": false,
  "examples": [
    {
      "id": "student-assessment-workflow",
      "name": "Student Assessment Workflow",
      "version": "1.0.0",
      "description": "Automated workflow for student assessment and feedback",
      "category": "assessment",
      "tags": ["assessment", "feedback", "automation"],
      "metadata": {
        "author": "jaqEdu Team",
        "created": "2024-01-01T00:00:00Z",
        "estimatedDuration": 300,
        "complexity": "medium"
      },
      "triggers": [
        {
          "type": "user-action",
          "config": {
            "action": "submit-quiz",
            "context": "course-module"
          }
        }
      ],
      "variables": {
        "studentId": {
          "type": "string",
          "required": true,
          "description": "ID of the student taking assessment"
        },
        "moduleId": {
          "type": "string",
          "required": true,
          "description": "Course module identifier"
        },
        "passingScore": {
          "type": "number",
          "default": 70,
          "description": "Minimum passing score percentage"
        }
      },
      "steps": [
        {
          "id": "validate-submission",
          "name": "Validate Quiz Submission",
          "type": "action",
          "config": {
            "service": "quiz-validator",
            "method": "validateSubmission"
          },
          "inputs": {
            "submissionData": "{{trigger.payload}}"
          }
        },
        {
          "id": "calculate-score",
          "name": "Calculate Assessment Score",
          "type": "action",
          "dependencies": ["validate-submission"],
          "config": {
            "service": "scoring-engine",
            "method": "calculateScore"
          }
        },
        {
          "id": "check-passing",
          "name": "Check if Student Passed",
          "type": "condition",
          "dependencies": ["calculate-score"],
          "condition": "{{steps.calculate-score.score}} >= {{variables.passingScore}}"
        },
        {
          "id": "generate-feedback",
          "name": "Generate Personalized Feedback",
          "type": "ai-task",
          "dependencies": ["calculate-score"],
          "config": {
            "aiService": "feedback-generator",
            "prompt": "Generate personalized feedback for student assessment"
          }
        }
      ],
      "outputs": {
        "finalScore": {
          "type": "number",
          "source": "steps.calculate-score.score",
          "description": "Student's final assessment score"
        },
        "feedback": {
          "type": "string",
          "source": "steps.generate-feedback.result",
          "description": "Personalized feedback for the student"
        }
      },
      "permissions": {
        "required": ["assess-students"],
        "roles": ["educator", "admin"]
      }
    }
  ]
}